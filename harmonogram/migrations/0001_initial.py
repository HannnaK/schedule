# Generated by Django 3.1.5 on 2021-12-14 10:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AligningNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(1, 'Obrównywanie okładek na netto'), (2, 'Obrównywanie składek na netto')])),
                ('norm', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Breaking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_size', models.CharField(choices=[('A3', 'A3 (297 x 420)'), ('A4', 'A4 (210 x 297)'), ('A5', 'A5 (148 x 210)'), ('A6', 'A6 (105 x 148)'), ('5', '100 x 200'), ('6', '110 x 190'), ('7', '115 x 200'), ('8', '156 x 232'), ('9', '164 x 238')], max_length=20)),
                ('breaks_number', models.IntegerField()),
                ('offset_80_chalk_90_200_cardboard_240', models.IntegerField()),
                ('cardboard_300_chalk_250_300', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Collecting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(1, 'ręczne'), (2, 'maszynowe-krokodyl'), (3, 'pojedyńcze kartki')])),
                ('norm', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Cut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grammage', models.IntegerField(choices=[(1, 'offset 80'), (2, 'kreda 90'), (3, 'kreda 115'), (4, 'kreda 135'), (5, 'kreda 170'), (6, 'kreda 200'), (7, 'kreda 250'), (8, 'kreda 300'), (9, 'karton 240'), (10, 'karton 300')])),
                ('sheets_number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='GluingNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages_sum', models.IntegerField()),
                ('norm', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='JoiningNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(3, 'szycie drutem oczkowym'), (4, 'szycie drutem zeszyt')])),
                ('norm', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PackingNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(choices=[(1, 'brak'), (2, 'pojedyńcze w folię'), (3, 'pojedyńcze w folię z wrzutką'), (4, 'folia do 20 sztuk'), (5, 'folia do 50 sztuk'), (6, 'folia do 100 sztuk'), (7, 'papier do 5 sztuk'), (8, 'papier do 10 sztuk'), (9, 'papier do 20 sztuk'), (10, 'papier do 50 sztuk'), (11, 'papier do 100 sztuk')])),
                ('norm', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PerformanceStandardDigit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper', models.IntegerField(choices=[(1, 'offset 80'), (2, 'kreda 90'), (3, 'kreda 115'), (4, 'kreda 135'), (5, 'kreda 170'), (6, 'kreda 200'), (7, 'kreda 250'), (8, 'kreda 300'), (9, 'karton 240'), (10, 'karton 300')])),
                ('color_1', models.IntegerField()),
                ('other_color', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_number', models.CharField(max_length=20)),
                ('project_name', models.CharField(max_length=80)),
                ('date_to_be_printed', models.DateTimeField()),
                ('date_to_customer', models.DateField()),
                ('printing_type', models.IntegerField(choices=[(1, 'cyfra'), (2, 'offset')])),
                ('circulation', models.IntegerField()),
                ('paper_size', models.CharField(choices=[('A3', 'A3 (297 x 420)'), ('A4', 'A4 (210 x 297)'), ('A5', 'A5 (148 x 210)'), ('A6', 'A6 (105 x 148)'), ('5', '100 x 200'), ('6', '110 x 190'), ('7', '115 x 200'), ('8', '156 x 232'), ('9', '164 x 238')], default='A4', max_length=20)),
                ('binding', models.IntegerField(choices=[(1, 'brak'), (2, 'klejenie'), (3, 'szycie drutem oczkowym'), (4, 'szycie drutem zeszyt'), (5, 'szycie nićmi'), (6, 'spiralowanie')], default=2)),
                ('collecting', models.IntegerField(choices=[(1, 'ręczne'), (2, 'maszynowe-krokodyl'), (3, 'pojedyńcze kartki')], default=1)),
                ('trimming', models.IntegerField(choices=[(1, 'brak'), (2, 'trójnóż'), (3, 'gilotyna')], default=2)),
                ('packing', models.IntegerField(choices=[(1, 'brak'), (2, 'pojedyńcze w folię'), (3, 'pojedyńcze w folię z wrzutką'), (4, 'folia do 20 sztuk'), (5, 'folia do 50 sztuk'), (6, 'folia do 100 sztuk'), (7, 'papier do 5 sztuk'), (8, 'papier do 10 sztuk'), (9, 'papier do 20 sztuk'), (10, 'papier do 50 sztuk'), (11, 'papier do 100 sztuk')], default=9)),
                ('foil', models.IntegerField(choices=[(1, 'brak'), (2, 'mat'), (3, 'błysk'), (4, 'satyna'), (5, 'mat-2 str'), (6, 'błysk-2 str')], default=3)),
                ('manual_work', models.IntegerField(default='1')),
                ('cover', models.IntegerField(choices=[(1, 'okładka 1 stronna'), (2, 'okładka 2 stronna')])),
                ('cover_color', models.IntegerField(default=4)),
                ('inside_color', models.IntegerField(default=0)),
                ('insole_color', models.IntegerField(default=0)),
                ('cover_page', models.IntegerField(default=4)),
                ('inside_page', models.IntegerField(default=0)),
                ('insole_page', models.IntegerField(default=0)),
                ('cover_paper', models.IntegerField(choices=[(1, 'offset 80'), (2, 'kreda 90'), (3, 'kreda 115'), (4, 'kreda 135'), (5, 'kreda 170'), (6, 'kreda 200'), (7, 'kreda 250'), (8, 'kreda 300'), (9, 'karton 240'), (10, 'karton 300')], default=7)),
                ('inside_paper', models.IntegerField(blank=True, choices=[(1, 'offset 80'), (2, 'kreda 90'), (3, 'kreda 115'), (4, 'kreda 135'), (5, 'kreda 170'), (6, 'kreda 200'), (7, 'kreda 250'), (8, 'kreda 300'), (9, 'karton 240'), (10, 'karton 300')], default=3, null=True)),
                ('insole_paper', models.IntegerField(blank=True, choices=[(1, 'offset 80'), (2, 'kreda 90'), (3, 'kreda 115'), (4, 'kreda 135'), (5, 'kreda 170'), (6, 'kreda 200'), (7, 'kreda 250'), (8, 'kreda 300'), (9, 'karton 240'), (10, 'karton 300')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrimmingNorm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binding', models.IntegerField(choices=[(1, 'brak'), (2, 'klejenie'), (3, 'szycie drutem oczkowym'), (4, 'szycie drutem zeszyt'), (5, 'szycie nićmi'), (6, 'spiralowanie')])),
                ('max_limit_pages_20', models.IntegerField()),
                ('max_limit_pages_30', models.IntegerField()),
                ('max_limit_pages_60', models.IntegerField()),
                ('max_limit_pages_100', models.IntegerField()),
                ('max_limit_pages_300', models.IntegerField()),
                ('max_limit_pages_700', models.IntegerField()),
                ('max_limit_pages_1100', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UtilityConverterDigit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_size', models.CharField(choices=[('A3', 'A3 (297 x 420)'), ('A4', 'A4 (210 x 297)'), ('A5', 'A5 (148 x 210)'), ('A6', 'A6 (105 x 148)'), ('5', '100 x 200'), ('6', '110 x 190'), ('7', '115 x 200'), ('8', '156 x 232'), ('9', '164 x 238')], max_length=20)),
                ('pages', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UtilityConverterOffset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_size', models.CharField(choices=[('A3', 'A3 (297 x 420)'), ('A4', 'A4 (210 x 297)'), ('A5', 'A5 (148 x 210)'), ('A6', 'A6 (105 x 148)'), ('5', '100 x 200'), ('6', '110 x 190'), ('7', '115 x 200'), ('8', '156 x 232'), ('9', '164 x 238')], max_length=20)),
                ('cover_pages', models.IntegerField()),
                ('inside_pages', models.IntegerField()),
            ],
        ),
    ]

